/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.awt.Image;
import java.awt.event.WindowEvent;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.SwingConstants;

/**
 * Show a progress bar with a logo image
 * and a small description
 * the minimum of progress bar set 0 to default.
 * 
 * @author DiegoCG
 */
public class ProgressionBar extends javax.swing.JFrame {

    int progress;
    int timeStep;
    /**
     * Creates new form VisualizzaProgressione
     */
    public ProgressionBar(int max)
    {
        init(max);
        timeStep = -1;
        
    }
    public ProgressionBar(int max, int timeStep)
    {
        init(max);
        this.timeStep = timeStep;
    }
    
    private void init(int max)
    {
        initComponents();
        jProgressBar.setMaximum(0);
        jProgressBar.setMaximum(max);
        jProgressBar.setStringPainted(true);
        progress = 0;
        jLabel.setText("");
        ImageIcon logo = new ImageIcon();
        logo = new ImageIcon(
                        new ImageIcon("Icone\\Logo VDP.png")
                                .getImage()
                                .getScaledInstance(1000, 480, Image.SCALE_DEFAULT)
                        );
        jLabelLogo.setIcon(logo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jProgressBar = new javax.swing.JProgressBar();
        jLabelLogo = new javax.swing.JLabel();
        jLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jLabel.setText("jLabel1");
        jLabel.setHorizontalAlignment(SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLogo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                    .addComponent(jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        
    }//GEN-LAST:event_formWindowClosing
    public void setProgress(int val)
    {
        jProgressBar.setValue(val);
        jProgressBar.repaint();
        if(timeStep != -1)
        {
            try
            {
                TimeUnit.MILLISECONDS.sleep((long)timeStep);
            } catch (InterruptedException ex)
            {
                Logger.getLogger(ProgressionBar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public void progress()
    {
        if(progress < jProgressBar.getMaximum())
        {
            registro.Registro.log(++progress);
        }
        jProgressBar.setValue(progress);
        jProgressBar.repaint();
        if(timeStep != -1)
        {
            try
            {
                TimeUnit.MILLISECONDS.sleep((long)timeStep);
            } catch (InterruptedException ex)
            {
                Logger.getLogger(ProgressionBar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    public void progress(String messaggio)
    {
        jLabel.setText(messaggio);
        progress();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JProgressBar jProgressBar;
    // End of variables declaration//GEN-END:variables

    public void close()
    {
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }
}
